local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local MAX_DISTANCE = 1000
local ESPs = {}

-- Create a new Drawing box
local function CreateBox()
	local box = Drawing.new("Square")
	box.Color = Color3.fromRGB(255, 0, 0)
	box.Thickness = 1
	box.Transparency = 1
	box.Filled = false
	box.Visible = false
	return box
end

-- Cleanup ESP for a character
local function Cleanup(character)
	local data = ESPs[character]
	if data then
		data.box.Visible = false
		data.box:Remove()
		for _, conn in pairs(data.connections) do
			pcall(function() conn:Disconnect() end)
		end
		ESPs[character] = nil
	end
end

-- Setup ESP for a character
local function SetupCharacter(character)
	if ESPs[character] then return end

	local box = CreateBox()
	local connections = {}

	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		table.insert(connections, humanoid.Died:Connect(function()
			Cleanup(character)
		end))
	end

	table.insert(connections, character.AncestryChanged:Connect(function(_, parent)
		if not parent then
			Cleanup(character)
		end
	end))

	ESPs[character] = { box = box, connections = connections }
end

-- Setup player to track character
local function SetupPlayer(player)
	if player == LocalPlayer then return end

	player.CharacterAdded:Connect(function(character)
		task.wait(0.5)
		SetupCharacter(character)
	end)

	if player.Character then
		SetupCharacter(player.Character)
	end
end

-- Cleanup on player leaving
Players.PlayerRemoving:Connect(function(player)
	if player.Character then
		Cleanup(player.Character)
	end
end)

-- Setup existing players
for _, player in ipairs(Players:GetPlayers()) do
	SetupPlayer(player)
end

-- Setup new players
Players.PlayerAdded:Connect(SetupPlayer)

-- Main render loop for ESP boxes
RunService.RenderStepped:Connect(function()
	local camPos = Camera.CFrame.Position

	for character, data in pairs(ESPs) do
		local box = data.box

		if not character or not character.Parent then
			box.Visible = false
			Cleanup(character)
			continue
		end

		local hrp = character:FindFirstChild("HumanoidRootPart")
		local head = character:FindFirstChild("Head")
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if not hrp or not head or not humanoid or humanoid.Health <= 0 then
			box.Visible = false
			continue
		end

		local distance = (camPos - hrp.Position).Magnitude
		if distance > MAX_DISTANCE then
			box.Visible = false
			continue
		end

		local top, onScreenTop = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.5, 0))
		local bottom, onScreenBottom = Camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 3, 0))

		if onScreenTop and onScreenBottom then
			local height = math.abs(bottom.Y - top.Y)
			local width = height / 2
			box.Size = Vector2.new(width, height)
			box.Position = Vector2.new(top.X - width / 2, top.Y)
			box.Visible = true
		else
			box.Visible = false
		end
	end
end)

-- Optional: Debug print number of Drawing objects every 5 seconds
task.spawn(function()
	while true do
		local total = 0
		for _, v in pairs(getgc(true)) do
			if typeof(v) == "table" and v.__type == "DrawingObject" then
				total += 1
			end
		end
		print("[DEBUG] Drawing objects:", total)
		task.wait(5)
	end
end)
